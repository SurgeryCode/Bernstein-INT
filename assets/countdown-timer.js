class CountdownTimer extends HTMLElement{connectedCallback(){this.endDate=new Date(this.getAttribute("end-date")).getTime(),this.locale=this.getAttribute("locale")||"en",this.translations=JSON.parse(this.getAttribute("translations")),this.innerHTML=`<div id="countdown-${this.dataset.id}" class="countdown"></div>`,this.updateCountdown(),this.timer=setInterval(()=>this.updateCountdown(),1e3)}updateCountdown(){var t,n,s,a=(new Date).getTime(),a=this.endDate-a;a<0?clearInterval(this.timer):(t=Math.floor(a/864e5),n=Math.floor(a%864e5/36e5),s=Math.floor(a%36e5/6e4),a=Math.floor(a%6e4/1e3),this.querySelector("#countdown-"+this.dataset.id).innerHTML=`
      <span><span class="countdown-number">${t}</span> <span class="countdown-label">${this.getLabel(t,"day")}</span></span>
      <span><span class="countdown-number">${n}</span> <span class="countdown-label">${this.getLabel(n,"hour")}</span></span>
      <span><span class="countdown-number">${s}</span> <span class="countdown-label">${this.getLabel(s,"minute")}</span></span>
      <span><span class="countdown-number">${a}</span> <span class="countdown-label">${this.getLabel(a,"second")}</span></span>
    `)}getLabel(t,n){return"pl"===this.locale||"cs"===this.locale?1===t?this.translations[n].one:1<t&&t<5?this.translations[n].few:this.translations[n].many:1===t?this.translations[n].one:this.translations[n].many}}customElements.define("countdown-timer",CountdownTimer);