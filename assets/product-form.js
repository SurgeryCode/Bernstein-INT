if(!customElements.get("product-form")){class a extends HTMLElement{constructor(){super(),this.keys=[],this.form=this.querySelector("form"),this.variant=this.querySelector('[name="id"]'),this.quantity=this.querySelector('[name="quantity"]'),this.quantity_field=this.querySelector(".quantity"),this.quantity_error=this.querySelector(".quantity .label-error"),this.button_submit=this.querySelector('button[type="submit"]'),this.option=this.querySelectorAll("input[data-product-option]"),this.props_option=this.querySelectorAll(".product-configurator.selected input[data-configurator-value]"),this.configured_variant=this.querySelector("#product-configurator-variants [data-configurator-label]"),this.price=document.querySelectorAll(".product [data-default-price]"),this.components=[],this.selected_options=[],this.warranty={},this.added_quantity=document.querySelector("[data-added-quantity]"),this.added_price=document.querySelector("[data-added-price]"),this.form.addEventListener("submit",t=>(t.preventDefault(),this.submit(),!1)),this.option.forEach(e=>{this.selected_options.push(e.value),e.addEventListener("change",()=>{var t=parseInt(e.dataset.productOption);this.selected_options[t]=e.value,this.findVariant()})}),this.variant.addEventListener("change",t=>{var e=window.location.origin+window.location.pathname+("?variant="+this.variant.value);history.pushState({variant:this.variant.value},"",e),this.updateVariant()}),this.props_option.forEach(t=>{t.addEventListener("change",()=>{this.updatePrice()})}),window.addEventListener("popstate",t=>{t.state&&(this.variant.value=t.state.variant,this.updateVariant())}),window.productWarrantyChangeBind||(window.addEventListener("productWarrantyChange",t=>{this.warranty=t.detail,this.submitRefresh()}),window.productWarrantyChangeBind=!0),window.productComponentChangeBind||(window.addEventListener("productComponentChange",t=>{this.updateProductComponents(t.detail)}),window.productComponentChangeBind=!0),window.addToCartRefreshBind||(window.addEventListener("addToCartRefresh",t=>{this.submitRefresh()}),window.addToCartRefreshBind=!0),this.updatePrice(),this.calsDeliveryDate()}updateVariant(){this.quantity.value=1,document.querySelectorAll(".product [data-variant-detail], .drawer__product [data-variant-detail], .upsell[data-variant-detail], .gallery [data-variant-detail]").forEach(t=>{-1!=t.dataset.variantDetail.split(",").indexOf(this.variant.value)?t.classList.add("selected"):t.classList.remove("selected")}),this.props_option=this.querySelectorAll(".product-configurator.selected input[data-configurator-value]"),this.props_option.forEach(t=>{t.addEventListener("change",()=>{this.updatePrice()})}),this.updatePrice()}updatePrice(t){let a=0;this.props_option.forEach(t=>{t=100*parseFloat(t.getAttribute("data-price-mod"));a+=t}),this.price.forEach(t=>{var e=parseInt(t.getAttribute("data-default-price"));t.innerText=""+this.formatMoney(e+a)})}updateProductComponents(t){1==t.quantity?this.components.push(t.variant):-1!=(t=this.components.indexOf(t.variant))&&this.components.splice(t,1)}clearProductComponents(){this.components=[];var t=document.querySelector("upsell-list[data-type=bundle]");t&&t.dispatchEvent(new CustomEvent("clear"))}findVariant(){if(!(window.variants.length<0)&&-1==this.selected_options.indexOf(null)){let e=!1;window.variants.forEach(t=>{Array.isArray(t.options)&&Array.isArray(this.selected_options)&&t.options.length===this.selected_options.length&&t.options.every((t,e)=>t===this.selected_options[e])&&(e=t)}),e?(this.classList.remove("product-form--fake"),this.variant.value=e.id,this.variant.dispatchEvent(new Event("change")),e.available?(this.button_submit.disabled=!1,this.quantity.disabled=!1):(this.button_submit.disabled=!0,this.quantity.disabled=!0),this.configured_variant&&(this.configured_variant.innerText=e.title),window.dispatchEvent(new CustomEvent("variantChange",{detail:e})),"continue"==e.inventory_policy?this.quantity.max=999:this.quantity.max=e.in_stock,this.quantity_error.innerText=e.in_stock_error):this.classList.add("product-form--fake")}}calsDeliveryDate(){this.querySelectorAll("[data-delivery-date]").forEach(t=>{var e=t.getAttribute("data-delivery-date").split("-"),a=new Date((new Date).getTime());a.setHours(12,0,0,0);let i=parseInt(e[0]),n=e[1]?parseInt(e[1]):i,r,s;if(15<i){for(;0<i||0<n;)a.setHours(a.getHours()+24),i--,n--,i<=0&&!r&&(r=new Date(a.getTime())),n<=0&&!s&&(s=new Date(a.getTime()));6==r.getDay()&&(r=new Date(r.setDate(r.getDate()+2)),s=new Date(s.setDate(s.getDate()+2))),0==r.getDay()&&(r=new Date(r.setDate(r.getDate()+1)),s=new Date(s.setDate(s.getDate()+2))),0==(s=6==s.getDay()?new Date(s.setDate(s.getDate()+2)):s).getDay()&&(s=new Date(s.setDate(s.getDate()+1)))}else for(12<=(new Date).getHours()&&1==i&&(i++,n++);0<i||0<n;)a.setHours(a.getHours()+24),6!==a.getDay()&&0!==a.getDay()&&(i--,n--,i<=0&&!r&&(r=new Date(a.getTime())),n<=0)&&!s&&(s=new Date(a.getTime()));i==n?t.innerText=""+this.formatDate(r):t.innerText=this.formatDate(r)+" â€“ "+this.formatDate(s)})}formatDate(t){let e=t.getDate()+" "+window.accessibility.months[t.getMonth()];var a=new Date;return t.getFullYear()!==a.getFullYear()&&(e+=" "+t.getFullYear()),e}formatMoney(t){"string"==typeof t&&(t=t.replace(".",""));var e="",a=/\{\{\s*(\w+)\s*\}\}/,i=window.moneyFormat;function n(t,e){return void 0===t?e:t}function r(t,e,a,i){return e=n(e,2),a=n(a,","),i=n(i,"."),isNaN(t)||null==t?0:(e=(t=(t/100).toFixed(e)).split("."))[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g,"$1"+a).replace("."," ")+(e[1]?i+e[1]:"").replace("."," ")}switch(i.match(a)[1]){case"amount":e=r(t,2);break;case"amount_no_decimals":e=r(t,0);break;case"amount_with_comma_separator":e=r(t,2,".",",");break;case"amount_no_decimals_with_comma_separator":e=r(t,0,".",",")}return i.replace(a,e)}submit(){if(this.quantity.value&&this.variant.value){this.button_submit.classList.add("button--loading");const e={},a=(0<this.props_option.length&&(e._configuration=[]),this.props_option.forEach(t=>{0<parseInt(t.getAttribute("data-price-mod"))&&e._configuration.push({name:`${t.value} (${t.getAttribute("data-price-mod-money")})`,type:t.getAttribute("data-option-type"),image:t.getAttribute("data-image"),priceMod:parseFloat(t.getAttribute("data-price-mod"))})}),this.warranty.id&&(e._warranty=[{id:this.warranty.id}],e[this.warranty.name]=this.warranty.value),{items:[{id:this.variant.value,quantity:parseInt(this.quantity.value),properties:e}]});this.components.forEach(t=>{a.items.push({id:t,quantity:1})}),fetch("/cart/add.js",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)}).then(t=>t.json()).then(t=>{var e;t.items&&(t.items.forEach(t=>{this.keys.push(t.key)}),this.added_quantity&&(1<parseInt(this.quantity.value)?this.added_quantity.innerText=this.quantity.value+" x ":this.added_quantity.innerText=""),this.added_price&&(e=t.items[0].price*parseInt(this.quantity.value),this.added_price.innerText=""+this.formatMoney(e)),window.dispatchEvent(new CustomEvent("drawerOpen",{detail:{id:"drawer-product-upsell"}})),window.dispatchEvent(new CustomEvent("cartCounterUpdate"))),t.message&&this.quantity_field.classList.add("quantity--error"),this.button_submit.classList.remove("button--loading")})}}submitRefresh(){const e={updates:{}};this.keys.forEach(t=>{e.updates[t]=0}),fetch("/cart/update.js",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then(t=>t.json()).then(t=>{this.keys=[],this.submit()})}}customElements.define("product-form",a)}